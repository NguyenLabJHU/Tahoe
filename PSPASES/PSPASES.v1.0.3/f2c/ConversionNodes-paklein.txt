Things that needed to be addressed when running the code through f2c
(1) The source fortran files were modified so that local variable Cray
    pointers where re-written into the argument list so their dynamic
	dimensions could be set with the DIMENSION statement.

(2) allocate statements (Cray pointers) are replaced with malloc's. Be
    sure to get enough space to cover the range of integers given, i.e.,

	allocate(p(0:N))

	means you need an array length N+1.

(3) When freeing these variables, you need to be careful to undo any
    pointer offsets that f2c produces.

(4) all calls to functions in libf2c.a where replaced with calls to normal
	C functions.

(5) look out for calls to abs(), which should be fabs. Comparisons between
    fabs(), .i.e, if (fabs(a) > fabs(b)) don't seem to work properly.

(6) C doesn't initialize the contents of dynamically allocated space to 0.

(7) because some functions are called recursively, the local variables
	cannot be declared static, which is the default with f2c

(8) f2c assumes functions called will also be fortran (not C), so check
    all arguments to see if they are supposed to be pointers or values.

(9) MPI constants are replaced with their integer definitions by f2c, which 
	are specific to the MPI headers provided when f2c was run. The integer
	constants must be replaced with their names.

Potential issues:
(1) lbit_shift translated from ishft in moveai.c. What does this do?
