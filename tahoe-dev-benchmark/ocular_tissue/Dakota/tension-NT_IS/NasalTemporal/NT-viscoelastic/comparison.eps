%!PS-Adobe-2.0 EPSF-2.0
%%Title: comparison.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Tue May 10 15:14:25 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
658 280 M
63 0 V
6241 0 R
-63 0 V
574 280 M
(-500) Rshow
658 936 M
63 0 V
6241 0 R
-63 0 V
574 936 M
( 0) Rshow
658 1592 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 500) Rshow
658 2248 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 1000) Rshow
658 2904 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 1500) Rshow
658 3560 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 2000) Rshow
658 4216 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 2500) Rshow
658 4872 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 3000) Rshow
658 280 M
0 63 V
0 4529 R
0 -63 V
658 140 M
( 0) Cshow
1446 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 5) Cshow
2234 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 10) Cshow
3022 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 15) Cshow
3810 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 20) Cshow
4598 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 25) Cshow
5386 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 30) Cshow
6174 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 35) Cshow
6962 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 40) Cshow
1.000 UL
LTb
658 280 M
6304 0 V
0 4592 V
-6304 0 V
658 280 L
1.000 UL
LT0
6311 4739 M
(simulated) Rshow
6395 4739 M
399 0 V
690 941 M
31 4 V
32 5 V
31 5 V
32 6 V
31 6 V
32 6 V
31 6 V
32 7 V
31 7 V
32 7 V
31 8 V
32 9 V
31 8 V
32 10 V
31 10 V
32 10 V
31 12 V
32 11 V
31 13 V
32 14 V
31 14 V
32 15 V
31 17 V
32 17 V
32 19 V
31 19 V
32 22 V
31 22 V
32 25 V
31 26 V
32 28 V
31 29 V
32 33 V
31 34 V
32 37 V
31 40 V
32 42 V
31 46 V
32 50 V
31 53 V
32 57 V
31 62 V
32 66 V
31 72 V
32 78 V
31 83 V
32 91 V
31 97 V
32 106 V
32 114 V
31 123 V
32 134 V
31 144 V
32 157 V
31 170 V
32 184 V
31 199 V
32 217 V
31 235 V
32 255 V
31 -9 V
32 -8 V
31 -9 V
32 -8 V
31 -8 V
32 -8 V
31 -8 V
32 -7 V
31 -8 V
32 -8 V
31 -7 V
32 -8 V
31 -7 V
32 -7 V
32 -7 V
31 -7 V
32 -7 V
31 -7 V
32 -7 V
31 -7 V
32 -6 V
31 -7 V
32 -6 V
31 -7 V
32 -6 V
31 -6 V
32 -6 V
31 -6 V
32 -6 V
31 -6 V
32 -6 V
31 -6 V
32 -6 V
31 -6 V
32 -5 V
31 -6 V
32 -5 V
31 -6 V
32 -5 V
32 -6 V
31 -5 V
32 -5 V
31 -5 V
32 -5 V
31 -6 V
32 -5 V
31 -5 V
32 -4 V
31 -5 V
32 -5 V
31 -5 V
32 -5 V
31 -4 V
32 -5 V
31 -5 V
32 -4 V
31 -5 V
32 -4 V
31 -5 V
32 -4 V
31 -4 V
32 -5 V
31 -4 V
32 -4 V
32 -4 V
31 -4 V
32 -4 V
31 -4 V
32 -4 V
31 -4 V
32 -4 V
31 -4 V
32 -4 V
31 -4 V
32 -4 V
31 -4 V
32 -3 V
31 -4 V
32 -4 V
31 -3 V
32 -4 V
31 -4 V
32 -3 V
31 -4 V
32 -3 V
31 -4 V
32 -3 V
31 -4 V
32 -3 V
32 -3 V
31 -4 V
32 -3 V
31 -3 V
32 -3 V
31 -4 V
32 -3 V
31 -3 V
32 -3 V
31 -3 V
32 -3 V
31 -3 V
32 -4 V
31 -3 V
32 -3 V
31 -2 V
32 -3 V
31 -3 V
32 -3 V
31 -3 V
32 -3 V
31 -3 V
32 -3 V
31 -2 V
32 -3 V
32 -3 V
31 -3 V
32 -2 V
31 -3 V
32 -3 V
31 -2 V
1.000 UL
LT1
6311 4599 M
(smoothed-experimental) Rshow
6395 4599 M
399 0 V
658 935 M
49 3 V
50 5 V
49 4 V
49 6 V
50 6 V
49 7 V
49 8 V
49 9 V
50 10 V
49 11 V
49 13 V
50 15 V
49 17 V
49 18 V
50 22 V
49 24 V
49 28 V
49 31 V
50 35 V
49 40 V
49 46 V
50 51 V
49 59 V
49 66 V
50 75 V
49 85 V
49 97 V
49 109 V
50 124 V
49 140 V
49 160 V
50 180 V
49 205 V
49 232 V
50 263 V
49 298 V
49 338 V
49 383 V
50 283 V
97 -62 V
97 -56 V
97 -50 V
97 -45 V
97 -39 V
97 -35 V
97 -32 V
97 -28 V
97 -25 V
97 -22 V
97 -20 V
97 -17 V
97 -16 V
97 -14 V
96 -12 V
97 -11 V
97 -10 V
97 -9 V
97 -8 V
97 -7 V
97 -6 V
97 -6 V
97 -5 V
97 -4 V
97 -4 V
97 -3 V
97 -3 V
97 -3 V
97 -3 V
97 -2 V
97 -2 V
97 -2 V
97 -1 V
97 -1 V
97 -2 V
97 -1 V
97 -1 V
97 -1 V
97 0 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
