clear;clc;
syms r avgSoundSpeed avgU avgV avgW avgH gamma porosity c;
r = gamma - 1;
c = 1/porosity
f = porosity;
avgH = 1/2*(avgU^2+avgV^2+avgW^2)+avgSoundSpeed^2/(gamma-1);
A= [    0,                  c,          0,      0,      0;
    (r*avgH-avgSoundSpeed^2)*f-avgU^2*c,   (2*c-f*r)*avgU,  -f*r*avgV, -f*r*avgW, f*r;
        -avgU*avgV*c,             avgV*c,        avgU*c,    0,      0;
        -avgU*avgW*c,             avgW*c,        0,      avgU*c,    0;
        avgU*((gamma-2)*avgH-avgSoundSpeed^2)*c,  (avgH-r*avgU^2)*c, -r*avgU*avgV*c, -r*avgU*avgW*c, gamma*avgU*c];
[VV,D]=eig(A)

v1=VV(:,1)
v2=VV(:,2)
v3=VV(:,3)
v4=VV(:,4)
v5=VV(:,5)
ccode(D(1,1))
ccode(D(2,2))
ccode(D(3,3))
ccode(D(4,4))
ccode(D(5,5))
ccode(simplify(v1/v1(1,1)))
ccode(simplify(v2/v2(1,1)))
v3+v5*avgV
v4+v5*avgW
simplify(v3*avgV+v4*avgW+v5*(avgU^2+avgV^2+avgW^2)/2)

output:

>> ccode(D(1,1))
  t0 = (avgU*(1.0/2.0)+avgU*gamma*(1.0/2.0)+avgU*(porosity*porosity)*(1.0/2.0)-sqrt((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0+(avgU*avgU)*(porosity*porosity*porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0+(avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)*2.0-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)*2.0+(avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity))*(1.0/2.0)-avgU*gamma*(porosity*porosity)*(1.0/2.0))/porosity;

>> ccode(D(2,2))
  t0 = (avgU*(1.0/2.0)+avgU*gamma*(1.0/2.0)+avgU*(porosity*porosity)*(1.0/2.0)+sqrt((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0+(avgU*avgU)*(porosity*porosity*porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0+(avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)*2.0-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)*2.0+(avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity))*(1.0/2.0)-avgU*gamma*(porosity*porosity)*(1.0/2.0))/porosity;

>> ccode(D(3,3))
  t0 = avgU/porosity;

>> ccode(D(4,4))
  t0 = avgU/porosity;

>> ccode(D(5,5))
  t0 = avgU/porosity;
  
>> ccode(simplify(v1/v1(1,1)))
  T[0][0] = 1.0;
  T[1][0] = (-(avgU*avgU)*gamma+avgU*avgU-(avgU*avgU)*(porosity*porosity)*(1.0/2.0)-(avgV*avgV)*(porosity*porosity)*(1.0/2.0)-(avgW*avgW)*(porosity*porosity)*(1.0/2.0)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)+(avgU*avgU)*gamma*(porosity*porosity)*(1.0/2.0)+(avgV*avgV)*gamma*(porosity*porosity)*(1.0/2.0)+(avgW*avgW)*gamma*(porosity*porosity)*(1.0/2.0))/(avgU-avgU*gamma)-((avgU*avgU*avgU)*gamma*2.0-avgU*avgU*avgU-(avgU*avgU*avgU)*(gamma*gamma)+(avgU*avgU*avgU)*(porosity*porosity)*(3.0/2.0)+(avgU*avgU*avgU)*(porosity*porosity*porosity*porosity)*(1.0/2.0)+((-(avgU*avgU)*gamma+avgU*avgU-(avgU*avgU)*(porosity*porosity)*(1.0/2.0)-(avgV*avgV)*(porosity*porosity)*(1.0/2.0)-(avgW*avgW)*(porosity*porosity)*(1.0/2.0)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)+(avgU*avgU)*gamma*(porosity*porosity)*(1.0/2.0)+(avgV*avgV)*gamma*(porosity*porosity)*(1.0/2.0)+(avgW*avgW)*gamma*(porosity*porosity)*(1.0/2.0))*((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0-(avgV*avgV)*(porosity*porosity)-(avgW*avgW)*(porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0+(avgU*avgU)*gamma*(porosity*porosity)*3.0+(avgV*avgV)*gamma*(porosity*porosity)+(avgW*avgW)*gamma*(porosity*porosity)-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)))/(avgU-avgU*gamma)+avgU*(avgV*avgV)*(porosity*porosity)*(1.0/2.0)+avgU*(avgW*avgW)*(porosity*porosity)*(1.0/2.0)+avgU*(avgV*avgV)*(porosity*porosity*porosity*porosity)*(1.0/2.0)+avgU*(avgW*avgW)*(porosity*porosity*porosity*porosity)*(1.0/2.0)-avgU*(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*3.0-avgU*(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity*porosity*porosity)-(avgU*avgU*avgU)*gamma*(porosity*porosity)*2.0-(avgU*avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)+(avgU*avgU*avgU)*(gamma*gamma)*(porosity*porosity)*(1.0/2.0)+(avgU*avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity)*(1.0/2.0)-avgU*(avgV*avgV)*(gamma*gamma)*(porosity*porosity)*(1.0/2.0)-avgU*(avgW*avgW)*(gamma*gamma)*(porosity*porosity)*(1.0/2.0)+avgU*(avgV*avgV)*(gamma*gamma)*(porosity*porosity*porosity*porosity)*(1.0/2.0)+avgU*(avgW*avgW)*(gamma*gamma)*(porosity*porosity*porosity*porosity)*(1.0/2.0)-avgU*(avgV*avgV)*gamma*(porosity*porosity*porosity*porosity)-avgU*(avgW*avgW)*gamma*(porosity*porosity*porosity*porosity)+avgU*(avgSoundSpeed*avgSoundSpeed)*gamma*(porosity*porosity)+avgU*(avgSoundSpeed*avgSoundSpeed)*gamma*(porosity*porosity*porosity*porosity))/((avgU*avgU)*gamma*-2.0-avgU*sqrt((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0+(avgU*avgU)*(porosity*porosity*porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0+(avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)*2.0-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)*2.0+(avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity))+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0-(avgV*avgV)*(porosity*porosity)-(avgW*avgW)*(porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0+avgU*gamma*sqrt((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0+(avgU*avgU)*(porosity*porosity*porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0+(avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)*2.0-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)*2.0+(avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity))+(avgU*avgU)*gamma*(porosity*porosity)*3.0+(avgV*avgV)*gamma*(porosity*porosity)+(avgW*avgW)*gamma*(porosity*porosity)-(avgU*avgU)*(gamma*gamma)*(porosity*porosity));
  T[2][0] = avgV;
  T[3][0] = avgW;
  T[4][0] = ((avgU*avgU*avgU*avgU)*gamma*3.0-avgU*avgU*avgU*avgU-(avgU*avgU)*(avgV*avgV)-(avgU*avgU)*(avgW*avgW)-(avgU*avgU*avgU*avgU)*(gamma*gamma)*3.0+(avgU*avgU*avgU*avgU)*(gamma*gamma*gamma)+(avgU*avgU*avgU*avgU)*(porosity*porosity)*(3.0/2.0)+(avgV*avgV*avgV*avgV)*(porosity*porosity)*(1.0/2.0)+(avgW*avgW*avgW*avgW)*(porosity*porosity)*(1.0/2.0)+(avgSoundSpeed*avgSoundSpeed*avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0+(avgU*avgU)*(avgV*avgV)*gamma*3.0+(avgU*avgU)*(avgW*avgW)*gamma*3.0-(avgU*avgU*avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgV*avgV*avgV*avgV)*gamma*(porosity*porosity)-(avgW*avgW*avgW*avgW)*gamma*(porosity*porosity)-(avgU*avgU)*(avgV*avgV)*(gamma*gamma)*3.0+(avgU*avgU)*(avgV*avgV)*(gamma*gamma*gamma)-(avgU*avgU)*(avgW*avgW)*(gamma*gamma)*3.0+(avgU*avgU)*(avgW*avgW)*(gamma*gamma*gamma)+(avgU*avgU)*(avgV*avgV)*(porosity*porosity)*2.0+(avgU*avgU)*(avgW*avgW)*(porosity*porosity)*2.0+(avgV*avgV)*(avgW*avgW)*(porosity*porosity)-(avgU*avgU)*(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0-(avgV*avgV)*(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0-(avgW*avgW)*(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0+(avgU*avgU*avgU*avgU)*(gamma*gamma)*(porosity*porosity)*(7.0/2.0)-(avgU*avgU*avgU*avgU)*(gamma*gamma*gamma)*(porosity*porosity)+(avgV*avgV*avgV*avgV)*(gamma*gamma)*(porosity*porosity)*(1.0/2.0)+(avgW*avgW*avgW*avgW)*(gamma*gamma)*(porosity*porosity)*(1.0/2.0)-(avgU*avgU)*(avgV*avgV)*gamma*(porosity*porosity)*5.0-(avgU*avgU)*(avgW*avgW)*gamma*(porosity*porosity)*5.0-(avgV*avgV)*(avgW*avgW)*gamma*(porosity*porosity)*2.0+(avgU*avgU)*(avgSoundSpeed*avgSoundSpeed)*gamma*(porosity*porosity)*6.0+(avgV*avgV)*(avgSoundSpeed*avgSoundSpeed)*gamma*(porosity*porosity)*2.0+(avgW*avgW)*(avgSoundSpeed*avgSoundSpeed)*gamma*(porosity*porosity)*2.0+(avgU*avgU)*(avgV*avgV)*(gamma*gamma)*(porosity*porosity)*4.0-(avgU*avgU)*(avgV*avgV)*(gamma*gamma*gamma)*(porosity*porosity)+(avgU*avgU)*(avgW*avgW)*(gamma*gamma)*(porosity*porosity)*4.0-(avgU*avgU)*(avgW*avgW)*(gamma*gamma*gamma)*(porosity*porosity)+(avgV*avgV)*(avgW*avgW)*(gamma*gamma)*(porosity*porosity)-(avgU*avgU)*(avgSoundSpeed*avgSoundSpeed)*(gamma*gamma)*(porosity*porosity)*2.0)/((gamma-1.0)*((avgU*avgU)*gamma*-2.0-avgU*sqrt((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0+(avgU*avgU)*(porosity*porosity*porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0+(avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)*2.0-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)*2.0+(avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity))+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0-(avgV*avgV)*(porosity*porosity)-(avgW*avgW)*(porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0+avgU*gamma*sqrt((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0+(avgU*avgU)*(porosity*porosity*porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0+(avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)*2.0-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)*2.0+(avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity))+(avgU*avgU)*gamma*(porosity*porosity)*3.0+(avgV*avgV)*gamma*(porosity*porosity)+(avgW*avgW)*gamma*(porosity*porosity)-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)));

>> ccode(simplify(v2/v2(1,1)))
  T[0][0] = 1.0;
  T[1][0] = (-(avgU*avgU)*gamma+avgU*avgU-(avgU*avgU)*(porosity*porosity)*(1.0/2.0)-(avgV*avgV)*(porosity*porosity)*(1.0/2.0)-(avgW*avgW)*(porosity*porosity)*(1.0/2.0)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)+(avgU*avgU)*gamma*(porosity*porosity)*(1.0/2.0)+(avgV*avgV)*gamma*(porosity*porosity)*(1.0/2.0)+(avgW*avgW)*gamma*(porosity*porosity)*(1.0/2.0))/(avgU-avgU*gamma)-((avgU*avgU*avgU)*gamma*2.0-avgU*avgU*avgU-(avgU*avgU*avgU)*(gamma*gamma)+(avgU*avgU*avgU)*(porosity*porosity)*(3.0/2.0)+(avgU*avgU*avgU)*(porosity*porosity*porosity*porosity)*(1.0/2.0)+((-(avgU*avgU)*gamma+avgU*avgU-(avgU*avgU)*(porosity*porosity)*(1.0/2.0)-(avgV*avgV)*(porosity*porosity)*(1.0/2.0)-(avgW*avgW)*(porosity*porosity)*(1.0/2.0)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)+(avgU*avgU)*gamma*(porosity*porosity)*(1.0/2.0)+(avgV*avgV)*gamma*(porosity*porosity)*(1.0/2.0)+(avgW*avgW)*gamma*(porosity*porosity)*(1.0/2.0))*((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0-(avgV*avgV)*(porosity*porosity)-(avgW*avgW)*(porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0+(avgU*avgU)*gamma*(porosity*porosity)*3.0+(avgV*avgV)*gamma*(porosity*porosity)+(avgW*avgW)*gamma*(porosity*porosity)-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)))/(avgU-avgU*gamma)+avgU*(avgV*avgV)*(porosity*porosity)*(1.0/2.0)+avgU*(avgW*avgW)*(porosity*porosity)*(1.0/2.0)+avgU*(avgV*avgV)*(porosity*porosity*porosity*porosity)*(1.0/2.0)+avgU*(avgW*avgW)*(porosity*porosity*porosity*porosity)*(1.0/2.0)-avgU*(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*3.0-avgU*(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity*porosity*porosity)-(avgU*avgU*avgU)*gamma*(porosity*porosity)*2.0-(avgU*avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)+(avgU*avgU*avgU)*(gamma*gamma)*(porosity*porosity)*(1.0/2.0)+(avgU*avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity)*(1.0/2.0)-avgU*(avgV*avgV)*(gamma*gamma)*(porosity*porosity)*(1.0/2.0)-avgU*(avgW*avgW)*(gamma*gamma)*(porosity*porosity)*(1.0/2.0)+avgU*(avgV*avgV)*(gamma*gamma)*(porosity*porosity*porosity*porosity)*(1.0/2.0)+avgU*(avgW*avgW)*(gamma*gamma)*(porosity*porosity*porosity*porosity)*(1.0/2.0)-avgU*(avgV*avgV)*gamma*(porosity*porosity*porosity*porosity)-avgU*(avgW*avgW)*gamma*(porosity*porosity*porosity*porosity)+avgU*(avgSoundSpeed*avgSoundSpeed)*gamma*(porosity*porosity)+avgU*(avgSoundSpeed*avgSoundSpeed)*gamma*(porosity*porosity*porosity*porosity))/((avgU*avgU)*gamma*-2.0+avgU*sqrt((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0+(avgU*avgU)*(porosity*porosity*porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0+(avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)*2.0-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)*2.0+(avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity))+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0-(avgV*avgV)*(porosity*porosity)-(avgW*avgW)*(porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0-avgU*gamma*sqrt((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0+(avgU*avgU)*(porosity*porosity*porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0+(avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)*2.0-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)*2.0+(avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity))+(avgU*avgU)*gamma*(porosity*porosity)*3.0+(avgV*avgV)*gamma*(porosity*porosity)+(avgW*avgW)*gamma*(porosity*porosity)-(avgU*avgU)*(gamma*gamma)*(porosity*porosity));
  T[2][0] = avgV;
  T[3][0] = avgW;
  T[4][0] = ((avgU*avgU*avgU*avgU)*gamma*3.0-avgU*avgU*avgU*avgU-(avgU*avgU)*(avgV*avgV)-(avgU*avgU)*(avgW*avgW)-(avgU*avgU*avgU*avgU)*(gamma*gamma)*3.0+(avgU*avgU*avgU*avgU)*(gamma*gamma*gamma)+(avgU*avgU*avgU*avgU)*(porosity*porosity)*(3.0/2.0)+(avgV*avgV*avgV*avgV)*(porosity*porosity)*(1.0/2.0)+(avgW*avgW*avgW*avgW)*(porosity*porosity)*(1.0/2.0)+(avgSoundSpeed*avgSoundSpeed*avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0+(avgU*avgU)*(avgV*avgV)*gamma*3.0+(avgU*avgU)*(avgW*avgW)*gamma*3.0-(avgU*avgU*avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgV*avgV*avgV*avgV)*gamma*(porosity*porosity)-(avgW*avgW*avgW*avgW)*gamma*(porosity*porosity)-(avgU*avgU)*(avgV*avgV)*(gamma*gamma)*3.0+(avgU*avgU)*(avgV*avgV)*(gamma*gamma*gamma)-(avgU*avgU)*(avgW*avgW)*(gamma*gamma)*3.0+(avgU*avgU)*(avgW*avgW)*(gamma*gamma*gamma)+(avgU*avgU)*(avgV*avgV)*(porosity*porosity)*2.0+(avgU*avgU)*(avgW*avgW)*(porosity*porosity)*2.0+(avgV*avgV)*(avgW*avgW)*(porosity*porosity)-(avgU*avgU)*(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0-(avgV*avgV)*(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0-(avgW*avgW)*(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0+(avgU*avgU*avgU*avgU)*(gamma*gamma)*(porosity*porosity)*(7.0/2.0)-(avgU*avgU*avgU*avgU)*(gamma*gamma*gamma)*(porosity*porosity)+(avgV*avgV*avgV*avgV)*(gamma*gamma)*(porosity*porosity)*(1.0/2.0)+(avgW*avgW*avgW*avgW)*(gamma*gamma)*(porosity*porosity)*(1.0/2.0)-(avgU*avgU)*(avgV*avgV)*gamma*(porosity*porosity)*5.0-(avgU*avgU)*(avgW*avgW)*gamma*(porosity*porosity)*5.0-(avgV*avgV)*(avgW*avgW)*gamma*(porosity*porosity)*2.0+(avgU*avgU)*(avgSoundSpeed*avgSoundSpeed)*gamma*(porosity*porosity)*6.0+(avgV*avgV)*(avgSoundSpeed*avgSoundSpeed)*gamma*(porosity*porosity)*2.0+(avgW*avgW)*(avgSoundSpeed*avgSoundSpeed)*gamma*(porosity*porosity)*2.0+(avgU*avgU)*(avgV*avgV)*(gamma*gamma)*(porosity*porosity)*4.0-(avgU*avgU)*(avgV*avgV)*(gamma*gamma*gamma)*(porosity*porosity)+(avgU*avgU)*(avgW*avgW)*(gamma*gamma)*(porosity*porosity)*4.0-(avgU*avgU)*(avgW*avgW)*(gamma*gamma*gamma)*(porosity*porosity)+(avgV*avgV)*(avgW*avgW)*(gamma*gamma)*(porosity*porosity)-(avgU*avgU)*(avgSoundSpeed*avgSoundSpeed)*(gamma*gamma)*(porosity*porosity)*2.0)/((gamma-1.0)*((avgU*avgU)*gamma*-2.0+avgU*sqrt((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0+(avgU*avgU)*(porosity*porosity*porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0+(avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)*2.0-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)*2.0+(avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity))+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0-(avgV*avgV)*(porosity*porosity)-(avgW*avgW)*(porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*2.0-avgU*gamma*sqrt((avgU*avgU)*gamma*-2.0+avgU*avgU+(avgU*avgU)*(gamma*gamma)-(avgU*avgU)*(porosity*porosity)*2.0+(avgU*avgU)*(porosity*porosity*porosity*porosity)+(avgSoundSpeed*avgSoundSpeed)*(porosity*porosity)*4.0+(avgU*avgU)*gamma*(porosity*porosity)*4.0-(avgU*avgU)*gamma*(porosity*porosity*porosity*porosity)*2.0-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)*2.0+(avgU*avgU)*(gamma*gamma)*(porosity*porosity*porosity*porosity))+(avgU*avgU)*gamma*(porosity*porosity)*3.0+(avgV*avgV)*gamma*(porosity*porosity)+(avgW*avgW)*gamma*(porosity*porosity)-(avgU*avgU)*(gamma*gamma)*(porosity*porosity)));


>> (v3+v5*avgV)
    0
    0
    1
    0
 avgV
 
>> v4+v5*avgW
    0
    0
    0
    1
 avgW
 
>> simplify(v3*avgV+v4*avgW+v5*(avgU^2+avgV^2+avgW^2)/2)
                              1
                           avgU
                           avgV
                           avgW
 avgU^2/2 + avgV^2/2 + avgW^2/2  


