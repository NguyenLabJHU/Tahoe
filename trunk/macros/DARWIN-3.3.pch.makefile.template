# $Id: DARWIN-3.3.pch.makefile.template,v 1.2 2004-08-10 06:37:02 paklein Exp $

# caller must define $(MACROS) file
include $(MACROS)

.SUFFIXES: .h .d

do_init_pch:
	@ $(ECHO) "initializing precompiled header file $(PCH)"
	@ if test -f $(SRC_DIR)/pch/$(PCH); then \
		$(LN) $(SRC_DIR)/pch/$(PCH) $(PCH); \
	else \
		$(ECHO) "/* dummy precompiled header */" > $(PCH); \
	fi
	make $(PCH:.h=.d)

do_build_pch:
	make $(PCH).gch

$(PCH).gch: $(PCH:.h=.d)
	@ $(PRINTF) "rebuilding precompiled header file\n"
	$(COMP_CC) $(CFLAGS_CC) $(OPT_CFLAGS) $(MOD_CFLAGS_CC) -x c++-header $(PCH) -o $(PCH).gch
	$(PRINTF) " pch: %s\n" `du -sk $(PCH).gch`

# suffix rule to create dependencies for header file
.h.d:
	@ $(PRINTF) "    $(MAKEDEPEND_CC): %s\n" $<
	@ $(PRINTF) "# DO NOT DELETE\n" > $@
	$(MAKEDEPEND_CC) $(MAKEDEPENDFLAGS_CC) $(OPT_MAKEDEPENDFLAGS) $(MOD_MAKEDEPENDFLAGS) -MT $(PCH).gch $(MAKEDEPEND_OUTPUT_CC)$@ $<

# dependencies
DEPEND = /dev/null
include $(DEPEND)
