#!/bin/csh
# $Id: regression.csh.template,v 1.15 2004-07-19 04:08:19 paklein Exp $

# username on Tahoe server
set TAHOE_USER =

# directory containing working copies of the tahoe modules
set W_DIR =

# host name - used only for subject line of test report
set HOST =

# need an echo
set ECHO = 'echo'

# SEACAS - Sandia-only, ignore otherwise  
setenv ACCESS /Users/paklein/Code/ACCESS

# installed modules
set MODULES= (macros toolbox tahoe benchmark_XML development)

######### hopefully no changes will be required below #########

# benchmark directory
set BENCHMARK = ${W_DIR}/benchmark_XML

# set path
set path=(${BENCHMARK}/scripts /bin /usr/bin /usr/local/bin /usr/X11R6/bin /usr/bin/X11 /usr/ccs/bin /usr/sbin /usr/local/ssh /usr/ucb /etc /usr/openwin/bin /project/local/bin $path)

# CVS
setenv CVS_RSH ssh

# name of the Tahoe executable
set TAHOE = tahoe

# build modules (in build order)
set BUILD_MODULES = (toolbox tahoe)

###################### regression test ########################
# clear log files
cd ${W_DIR}
if (-e make.stderr) rm make.stderr
if (-e make.stdout) rm make.stdout
#
# resolve test requestor - first command line argument of $TAHOE_USER
#
if ($#argv > 0) then
	set REQUESTOR = $1
else
	set REQUESTOR = $TAHOE_USER
endif
echo "running regression requested by: ${REQUESTOR}"
#
# get latest files from the CVS repository
#
${ECHO} "updating source from CVS repository..."
foreach mod ($MODULES)
	${ECHO} "updating macros $mod..."
	cd ${W_DIR}/$mod
	(cvs -q update -Pd >>! ${W_DIR}/make.stdout) >>&! ${W_DIR}/make.stderr
end
#
# remove libraries and executables
#
${ECHO} "removing object code..."
foreach mod ($BUILD_MODULES)
	cd ${W_DIR}/$mod
	if (-e ./lib/lib$mod.a) then
		rm ./lib/lib$mod.a
	endif
end
if (-e ${W_DIR}/tahoe/${TAHOE}) then
	rm ${W_DIR}/tahoe/${TAHOE}
endif
#
# rebuild libraries and executables
#
${ECHO} "rebuilding object code..."
foreach mod ($BUILD_MODULES)
	cd ${W_DIR}/$mod
	(make -s init build >>! ${W_DIR}/make.stdout) >>&! ${W_DIR}/make.stderr
end
#
# update comparator
#
${ECHO} "rebuilding comparator..."
cd ${BENCHMARK}/comparator
(make -s init build >>! ${W_DIR}/make.stdout) >>&! ${W_DIR}/make.stderr
#
# run tests
#
if (-x ${W_DIR}/tahoe/${TAHOE} && -x ${BENCHMARK}/comparator/compare) then

    cd ${BENCHMARK}
	
	# run benchmarks
    ${ECHO}  "running BENCHMARKs..."
	make -s clean
	${W_DIR}/tahoe/tahoe -f ${BENCHMARK}/run.batch >&! test.stdout

	# test results 
    ${ECHO}  "running COMPARATOR..."
	if (-e compare.summary) rm compare.summary
	if (-e compare.console) rm compare.console
    ${BENCHMARK}/comparator/compare -f run.batch >&! compare.console

	# assess results
    if (! -e ${BENCHMARK}/compare.summary) then
    	# benchmarks did not run
		${ECHO} "BENCHMARKs failed"
		${ECHO} "Subject: TAHOE: regression FAIL ${HOST}" > ${BENCHMARK}/tmp
		${ECHO} "TAHOE regression FAIL:" `date` >> ${BENCHMARK}/tmp
		${ECHO} "test requested by: ${REQUESTOR}" >> ${BENCHMARK}/tmp
		cat ${BENCHMARK}/tmp ${BENCHMARK}/compare.console > ${BENCHMARK}/tmp_mail
	else if (`grep -c "FAIL" ${BENCHMARK}/compare.summary` ) then
		# test/s failed
		${ECHO} "BENCHMARKs failed"
		${ECHO} "Subject: TAHOE: regression FAIL ${HOST}" > ${BENCHMARK}/tmp
		${ECHO} "TAHOE regression FAIL:" `date` >> ${BENCHMARK}/tmp
		${ECHO} "test requested by: ${REQUESTOR}" >> ${BENCHMARK}/tmp		
		cat ${BENCHMARK}/tmp ${BENCHMARK}/compare.summary > ${BENCHMARK}/tmp_mail
    else
    	# tests passed
		${ECHO} "BENCHMARKs passed"
		${ECHO} "Subject: TAHOE: regression PASS ${HOST}" > ${BENCHMARK}/tmp
		${ECHO} "TAHOE regression PASS:" `date` >> ${BENCHMARK}/tmp
		${ECHO} "test requested by: ${REQUESTOR}" >> ${BENCHMARK}/tmp
		cat ${BENCHMARK}/tmp ${BENCHMARK}/compare.summary > ${BENCHMARK}/tmp_mail
	endif
	
# build failed
else
	${ECHO} "Subject: TAHOE: build FAIL ${HOST}" > ${BENCHMARK}/tmp
	${ECHO} "TAHOE build FAIL:" `date` >> ${BENCHMARK}/tmp
	${ECHO} "test requested by: ${REQUESTOR}" >> ${BENCHMARK}/tmp
	cat ${BENCHMARK}/tmp ${W_DIR}/make.stderr > ${BENCHMARK}/tmp_mail
endif
#
# send it
#
scp ${BENCHMARK}/tmp_mail ${TAHOE_USER}@tahoe.ca.sandia.gov:/incoming/benchmark/mail.${HOST}
#
# run additional tests
#
cd ${BENCHMARK}/scripts; csh -f parallel.csh ${REQUESTOR} >& parallel.LOG
