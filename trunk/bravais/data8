3
0
2 2 2
FCC
3.52
BOX
3
PERIODICITY
1 1 0
ROTATION
1
1 1 0
-1 1 0
0 0 1
OUTPUT
mesh3D
#

NOTE: Test 3D rotation of box of atoms
------------------------------------------------------------
* nsd
* whichunit: length(1) or ncell(0)
* if (1), enter length(nsd,2) ; if (0) enter ncell(nsd)
* latticetype
* alat
* shape
* format output (see below)
* one of these key works:
PERIODICITY
ROTATION
SORT
OUTPUT
#


if PERIODICITY (default is 0)
* periodic condition: per(nsd)

if ROTATION  (default is identity)
*integer irot   irot = 0: rotate atoms in box
                irot = 1: rotate box of atoms
* read either rotation angle in 2D or rotation matrix in 3D.
(rk: if no rotation put either 0 or identity matrix).

if SORT (default is zero)
* isort(nsd) 
example: isort = 2 1 0: sorts coordinates according to z (2) direction.
(one criterion only up to now)
Careful: code in c: x <=> 0, y <=> 1 and z <=> 2 !

if OUTPUT (default is example)
* name of output file

Test of rotation in 3D : cells, no rotation. 


		case 0:
			return IOBaseT::kTahoe;
		case 1:
			return IOBaseT::kTahoeII;
		case 2:			
			return IOBaseT::kTecPlot;
		case 3:
			return IOBaseT::kEnSight;
		case 4:
			return IOBaseT::kEnSightBinary;
		case 5:
			return IOBaseT::kExodusII;
		case 6:
			return IOBaseT::kAbaqus;
		case 7:
			return IOBaseT::kAbaqusBinary;
   	        case 8:
	                return IOBaseT::kAVS;
	        case 9:
	                return IOBaseT::kAVSBinary;
	       case 10:
	                return IOBaseT::kPatranNeutral;
	       case 11:
	                return IOBaseT::kTahoeResults;
	       case 12:
	                return IOBaseT::kParaDyn;
