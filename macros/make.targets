# $Id: make.targets,v 1.9 2001-09-19 19:10:29 paklein Exp $
#
# platform specific instructions
include $(MACRO_DIR)/$(ARCH).macros

# include list of object files
OBJECT_LIST = $(OBJ_DIR)/obj.junk
include $(OBJECT_LIST)

#########################################################################
# grouped
OPT_CFLAGS = \
	$(TB_CFLAGS) \
	$(ACME_CFLAGS) \
	$(SPOOLESMPI_CFLAGS) \
	$(SPOOLESMT_CFLAGS) \
	$(SPOOLES_CFLAGS) \
	$(AZ_CFLAGS) \
	$(BLAS_CFLAGS) \
	$(AX_CFLAGS) \
	$(METIS_CFLAGS) \
	$(VTK_CFLAGS) \
	$(F2C_CFLAGS)

OPT_LFLAGS = \
	$(TB_LFLAGS) \
	$(ACME_LFLAGS) \
	$(SPOOLESMPI_LFLAGS) \
	$(SPOOLESMT_LFLAGS) \
	$(SPOOLES_LFLAGS) \
	$(AZ_LFLAGS) \
	$(BLAS_LFLAGS) \
	$(AX_LFLAGS) \
	$(METIS_LFLAGS) \
	$(VTK_LFLAGS) \
	$(F2C_LFLAGS)

OPT_LIB = \
	$(TB_LIB) \
	$(F2C_LIB) \
	$(BLAS_LIB) \
	$(AZ_LIB) \
	$(METIS_LIB) \
	$(SPOOLES_LIB) \
	$(SPOOLESMPI_LIB) \
	$(SPOOLESMT_LIB) \
	$(ACME_LIB) \
	$(VTK_LIB)

OPT_INC = \
	$(TB_INC) \
	$(F2C_INC) \
	$(BLAS_INC) \
	$(AZ_INC) \
	$(METIS_INC) \
	$(SPOOLES_INC) \
	$(SPOOLESMPI_INC) \
	$(SPOOLESMT_INC) \
	$(ACME_INC) \
	$(AX_INC) \
	$(VTK_INC)

#########################################################################
# paths for file dependencies
DEPEND_FILE = all.depend
DEPEND_PATH = -I$(INC_DIR) $(OPT_INC) $(INC_FLAGS)

# Sun spends too much time searching standard directories
#DEPEND_PATH = -Y -I$(INC_DIR) $(OPT_INC) $(INC_FLAGS)
#########################################################################

# default target
help:
	@ $(ECHO) " make targets:"
	@ $(ECHO) "   init - (re-)initialize headers and file dependencies"
	@ $(ECHO) "  build - (re-)build binaries"
	@ $(ECHO) "objects - (re-)compile object file, but don't link"
	@ $(ECHO) "  clean - remove object files and build temporaries"
	@ $(ECHO) "   help - display this list"

# instructions
build: objects $(BUILD)

$(TARGET): $(OPT_LIB) $(LIBRARY)
	@ $(ECHO) " linking..."	
	@ $(LINK) $(MAIN) -o $(TARGET) -L$(HOME_DIR)/lib -l$(TARGET) $(OPT_LFLAGS) $(LFLAGS)
	@ $(ECHO) "    ...wrote $(TARGET)"; $(ECHO) " "

# include object list and create archive
$(LIBRARY): $(LIB_DIR)/lib.junk
	@ $(ECHO) " building archive..."
	@ $(MAKE) build_library \
	"OBJECT_LIST = $(HOME_DIR)/object_list" \
	"AR = $(AR)" \
	"ARFLAGS = $(ARFLAGS)" \
	"LIBRARY = $(LIBRARY)" \
	"ECHO = $(ECHO)"

# create archive
build_library:
	@ cd $(OBJ_DIR); $(AR) $(ARFLAGS) $(LIBRARY) $(OBJ)	

# initialization
init:
	@ $(MAKE) headers
	@ $(MAKE) depend_init
	@ $(MAKE) object_list

# clean up - restore to unpacked state
clean:
	@- rm $(TARGET) object_list
	@- rm $(LIBRARY)
	@- cd $(SRC_DIR); $(MAKE) $(MAKE_OPTS) clean \
	"ARCH = $(ARCH)" \
	"MACRO_DIR = $(MACRO_DIR)"
	@- cd $(OBJ_DIR); rm *.o
	@- cd $(MACRO_DIR)/cxx_repository; rm *.o *.DB
	@- cd $(INC_DIR); rm *.h

# build object file list
object_list: FORCE
	@ $(ECHO) "collecting list of object files"
	@ $(ECHO) "OBJ = \c" > object_list
	@ cd $(SRC_DIR); \
	$(MAKE) library \
	"ARCH = $(ARCH)" \
	"MACRO_DIR = $(MACRO_DIR)" \
	"LIBRARY = $(HOME_DIR)/object_list" \
	"LIB_DIR = $(LIB_DIR)"
	@ $(ECHO) "" >> object_list

# set symbolic links to all header files
headers:
	@ $(ECHO) "cd $(SRC_DIR)"; \
	cd $(SRC_DIR); \
	$(MAKE) $(MAKE_OPTS) headers \
	"ARCH = $(ARCH)" \
	"MACRO_DIR = $(MACRO_DIR)" \
	"INC_DIR = $(INC_DIR)" \
	"CURR_DIR = $(SRC_DIR)"

# initialize dependency files
depend_init:
	@ $(ECHO) "cd $(SRC_DIR)"; \
	cd $(SRC_DIR); \
	$(MAKE) $(MAKE_OPTS) depend_init \
	"ARCH = $(ARCH)" \
	"MACRO_DIR = $(MACRO_DIR)" \
	"DEPEND_PATH = $(DEPEND_PATH)"

# build objects
objects:
	@ $(ECHO) "cd $(SRC_DIR)"; \
	cd $(SRC_DIR); \
	$(MAKE) $(MAKE_OPTS) objects \
	"ARCH = $(ARCH)" \
	"MACRO_DIR = $(MACRO_DIR)" \
	"INC_DIR = $(INC_DIR)" \
	"OBJ_DIR = $(OBJ_DIR)" \
	"LIB_DIR = $(LIB_DIR)" \
	"OPT_CFLAGS = $(OPT_CFLAGS)" \
	"DEPEND_PATH = $(DEPEND_PATH)" \
	"DEPEND = $(DEPEND_FILE)" \
	"CURR_DIR = $(SRC_DIR)"

FORCE:







