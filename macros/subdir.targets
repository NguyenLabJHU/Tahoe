# $Id: subdir.targets,v 1.6.2.1 2003-03-14 18:35:29 paklein Exp $

MACROS = \
	"INC_DIR = $(INC_DIR)" \
	"SRC_DIR = $(SRC_DIR)" \
	"OBJ_DIR = $(OBJ_DIR)" \
	"LIB_DIR = $(LIB_DIR)" \
	"ARCH = $(ARCH)" \
	"MACRO_DIR = $(MACRO_DIR)" \
	"OPT_CFLAGS = $(OPT_CFLAGS)" \
	"MY_CFLAGS = $(MY_CFLAGS)" \
	"MY_CCFLAGS = $(MY_CCFLAGS)" \
	"MY_FFLAGS = $(MY_FFLAGS)" \
	"MY_LFLAGS = $(MY_LFLAGS)" \
	"LIBRARY = $(LIBRARY)" \
	"MAKE_DEPEND = $(MAKE_DEPEND)" \
	"DEPEND_PATH = $(DEPEND_PATH)" \
	"DEPEND = $(DEPEND)"

# debugging
echo_all:
	@ $(PRINTF) "MAKE = $(MAKE)\n"
	@ $(PRINTF) "MAKE_OPTS = $(MAKE_OPTS)\n"
	@ $(PRINTF) "INC_DIR = $(INC_DIR)\n"
	@ $(PRINTF) "SRC_DIR = $(SRC_DIR)\n"
	@ $(PRINTF) "OBJ_DIR = $(OBJ_DIR)\n"
	@ $(PRINTF) "LIB_DIR = $(LIB_DIR)\n"
	@ $(PRINTF) "ARCH = $(ARCH)\n"
	@ $(PRINTF) "MACRO_DIR = $(MACRO_DIR)\n"
	@ $(PRINTF) "TR = $(TR)\n"
	@ $(PRINTF) "COMP_C = $(COMP_C)\n"
	@ $(PRINTF) "COMP_CC = $(COMP_CC)\n"
	@ $(PRINTF) "COMP_F = $(COMP_F)\n"
	@ $(PRINTF) "CFLAGS_C = $(CFLAGS_C)\n"
	@ $(PRINTF) "CFLAGS_CC = $(CFLAGS_CC)\n"
	@ $(PRINTF) "CFLAGS_F = $(CFLAGS_F)\n"
	@ $(PRINTF) "LIBRARY = $(LIBRARY)\n"
	@ $(PRINTF) "AR = $(AR)\n"
	@ $(PRINTF) "ARFLAGS = $(ARFLAGS)\n"
	@ $(PRINTF) "RM = $(RM)\n"
	@ $(PRINTF) "RM_FILES = $(RM_FILES)\n"
	@ $(PRINTF) "LN = $(LN)\n"
	@ $(PRINTF) "MY_CFLAGS = $(MY_CFLAGS)\n"
	@ $(PRINTF) "MY_CCFLAGS = $(MY_CCFLAGS)\n"
	@ $(PRINTF) "MY_FFLAGS = $(MY_FFLAGS)\n"
	@ $(PRINTF) "MY_LFLAGS = $(MY_LFLAGS)\n"
	@ $(PRINTF) "MAKE_DEPEND = $(MAKE_DEPEND)\n"
	@ $(PRINTF) "DEPEND_PATH = $(DEPEND_PATH)\n"
	@ $(PRINTF) "DEPEND = $(DEPEND)\n"
	@ $(PRINTF) "PRINTF = $(PRINTF)\n"
	@ $(PRINTF) "CAT = $(CAT)\n"

clean:
	-@ $(RM) $(RM_FILES)
	@ $(MAKE) $(MACROS) subdir_driver "COMMAND = clean"

depend_init: all.depend
	@ $(MAKE) $(MACROS) subdir_driver "COMMAND = depend_init"

depend_clean:
	-@ $(RM) *.d

all.depend: $(DEP)
	@ $(PRINTF) "    $(CAT): $(DEP) > all.depend\n"; $(CAT) $(DEP) > all.depend

headers: depend_clean $(HDR_LINK)
	@ $(MAKE) $(MACROS) subdir_driver "COMMAND = headers"

objects: all.depend
	@ $(MAKE) $(MACROS) update_objects
	@ $(MAKE) $(MACROS) subdir_driver "COMMAND = objects"

update_objects: $(OBJ)

library:
	@ $(PRINTF) " $(OBJ_LINK) " >> $(LIBRARY)
	@ $(MAKE) $(MACROS) subdir_driver "COMMAND = library"
	
subdir_loop:
	@ for n in $(SUB_DIR); do \
		if test -d $$n; then \
			$(PRINTF) " cd $$n\n"; \
			cd $$n; \
			$(MAKE) $(COMMAND) $(MACROS) "CURR_DIR = $(CURR_DIR)/$$n" \
			|| exit 1; \
			cd ../; \
		else \
			$(PRINTF) "\n*** missing directory: $(CURR_DIR)/$$n\n"; \
			$(PRINTF) "*** try updating with \"cvs update -Pd\"\n"; \
			exit 1; \
		fi; \
	done	

dummy:

