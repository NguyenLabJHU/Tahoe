# Three different line formats are valid:
#	key	-a    aliases...
#	key [options] directory
#	key [options] directory files...
#
# Where "options" are composed of:
#	-i prog		Run "prog" on "cvs commit" from top-level of module.
#	-o prog		Run "prog" on "cvs checkout" of module.
#	-e prog		Run "prog" on "cvs export" of module.
#	-t prog		Run "prog" on "cvs rtag" of module.
#	-u prog		Run "prog" on "cvs update" of module.
#	-d dir		Place module in directory "dir" instead of module name.
#	-l		Top-level directory only -- do not recurse.
#
# NOTE:  If you change any of the "Run" options above, you'll have to
# release and re-checkout any working directories of these modules.
#
# And "directory" is a path to a directory relative to $CVSROOT.
#
# The "-a" option specifies an alias.  An alias is interpreted as if
# everything on the right of the "-a" had been typed on the command line.
#
# You can encode a module within a module by using the special '&'
# character to interpose another module into the current module.  This
# can be useful for creating a module that consists of many directories
# spread out over the entire source repository.
#tahoeAll -a CBLAS PSPASES aztec benchmark_XML bravais contrib expat f2c guide.user macros metis spooles spoolesMPI spoolesMT tahoe tahoe-install toolbox
tahoeAll -a tahoe-install toolbox
CBLAS CBLAS
PSPASES PSPASES
aztec aztec
benchmark_XML benchmark_XML
bravais bravais
contrib contrib
expat expat
f2c f2c
guide.user guide.user
macros macros
metis metis
spooles spooles
spoolesMPI spoolesMPI
spoolesMT spoolesMT
tahoe tahoe
tahoe-install tahoe-install
toolbox toolbox
tahoe_fracture -a tahoe/src/elements tahoe/src/main tahoe/src/primitives !tahoe/src/elements/continuum !tahoe/src/elements/contact !tahoe/src/elements/particle !tahoe/src/elements/spring !tahoe/src/elements/bridging_scale !tahoe/src/elements/adhesion 
fracture_interface_release -a tahoe_fracture toolbox macros
