/* $Id: KBC_ControllerT.h,v 1.1.1.1 2001-01-29 08:20:40 paklein Exp $ */
/* created: paklein (09/05/2000)                                          */
/* Base class for all kinematic BC controllers                            */

#ifndef _KBC_CONTROLLER_T_H_
#define _KBC_CONTROLLER_T_H_

#include "Environment.h"
#include "GlobalT.h"

/* direct members */
#include "ArrayT.h"
#include "KBC_CardT.h"

/* forward declarations */
#include "ios_fwd_decl.h"
class ifstreamT;
class NodeManagerT;
class nControllerT;
class iArrayT;

class KBC_ControllerT
{
public:
	/* controller codes - derived classes */
	enum CodeT {kK_Field = 0,
      kBimaterialK_Field = 1,
         kMappedPeriodic = 2};

	/* constructor */
	KBC_ControllerT(NodeManagerT& node_manager);

	/* destructor */
	virtual ~KBC_ControllerT(void);

	/* boundary condition cards generated by the controller */
	const ArrayT<KBC_CardT>& KBC_Cards(void) const;

	/* initialize data - called immediately after construction */
	virtual void Initialize(ifstreamT& in) = 0;
	virtual void WriteParameters(ostream& out) const;

	/* initial condition/restart functions
	 *
	 * Set to initial conditions.  The restart functions
	 * should read/write any data that overrides the default
	 * values */
	virtual void InitialCondition(void) = 0;
	virtual void ReadRestart(istream& in);
	virtual void WriteRestart(ostream& out) const;

	/* initialize/finalize/reset step */
	virtual void InitStep(void);
	virtual void CloseStep(void);
	virtual void Reset(void);

	/* returns true if the internal force has been changed since
	 * the last time step */
	virtual GlobalT::RelaxCodeT RelaxSystem(void);

	/* output current configuration */
	virtual void WriteOutput(ostream& out) const;

protected:

	/* read nodes from stream */
	void ReadNodes(ifstreamT& in, iArrayT& id_list, iArrayT& nodes) const;
	
protected:

	/* nodal data */
	NodeManagerT& fNodeManager;

	/* boundary conditions cards - return value */
	ArrayT<KBC_CardT> fKBC_Cards;  	
};

/* boundary condition cards generated by the controller */
inline const ArrayT<KBC_CardT>& KBC_ControllerT::KBC_Cards(void) const
{
	return fKBC_Cards;
}

#endif /* _KBC_CONTROLLER_T_H_ */
