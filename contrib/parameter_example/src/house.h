/* $Id: house.h,v 1.1.2.1 2003-04-28 08:17:08 paklein Exp $ */#ifndef _HOUSE_H_#define _HOUSE_H_/* base class */#include "ParameterInterfaceT.h"/* direct members */#include "roof.h"#include "driveway.h"/* forward declarations */class lawn;class basement;class room;using namespace Tahoe;class house: public ParameterInterfaceT{public:	/** build style */	enum style {		undefined,		colonial,		ranch,		split_level	};	/** constructor */	house(void);	/** destructor */	~house(void);	/** \name implementation of ParameterInterfaceT */	/*@{*/	virtual void DefineParameters(ParameterListT& list) const;	virtual void SetParameters(const ParameterListT& list);	virtual void SubNames(ArrayT<StringT>& names, ArrayT<ParameterListT::OccurrenceT>& occur,		ArrayT<bool>& is_inline) const;	virtual ParameterInterfaceT* NewSub(const StringT& list_name) const;	/*@}*/private:	/** \name fixed components */	/*@{*/	/** house style as enumerated type */	style style_;	int zipcode_;	roof roof_;	driveway driveway_;	/*@}*/	/** \name variable components */	/*@{*/	basement* basement_;	lawn* lawn_;		ArrayT<room*> rooms_;	/*@}*/};#endif /* _HOUSE_H_ */